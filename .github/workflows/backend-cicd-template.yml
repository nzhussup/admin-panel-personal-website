name: Backend CI/CD for Build and Deploy

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
      service_path:
        required: true
        type: string
      lang:
        required: true
        type: string # e.g. "go" or "java"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: ${{ inputs.lang == 'go' || inputs.lang == 'java' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Go Tests
        if: ${{ inputs.lang == 'go' }}
        run: |
          go test ./... -v
        working-directory: ${{ inputs.service_path }}

      - name: Set up Java
        if: ${{ inputs.lang == 'java' }}
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Run Java Tests
        if: ${{ inputs.lang == 'java' }}
        run: |
          ./mvnw test
        working-directory: ${{ inputs.service_path }}

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.service_name }}:latest \
            --push .
        working-directory: ${{ inputs.service_path }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: SSH and Rollout Restart
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            kubectl rollout restart deployment/${{ inputs.service_name }}
