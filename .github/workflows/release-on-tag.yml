name: Create GitHub Release

on:
  push:
    tags:
      - "v*.*.*" # trigger on semantic version tags like v2.3.0

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # ensure full history so we can check branches

      - name: Check if tag is on main
        id: check_branch
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref }})
          echo "Tag commit: $TAG_COMMIT"
          # Check if main contains the tag commit
          if git merge-base --is-ancestor "$TAG_COMMIT" origin/main; then
            echo "‚úÖ Tag is on main"
            echo "proceed=true" >> $GITHUB_OUTPUT
          else
            echo "üö´ Tag is not on main"
            echo "proceed=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if tag is not on main
        if: steps.check_branch.outputs.proceed != 'true'
        run: |
          echo "Not deploying ‚Äî tag is not on main branch."
          exit 1

      - name: Extract changelog entry for tag
        id: changelog
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          TAG_STRIPPED="${TAG#v}"
          echo "Extracting changelog for tag: $TAG_STRIPPED"

          TAG_ESCAPED=$(echo "$TAG_STRIPPED" | sed 's/\./\\./g')

          ENTRY=$(sed -n "/^### \[$TAG_ESCAPED\]/,/^### \[/p" CHANGELOG.md | sed '1d;$d')

          if [ -z "$ENTRY" ]; then
            echo "‚ùå No changelog entry found for $TAG_STRIPPED"
            exit 1
          fi

          echo "changelog<<EOF" >> "$GITHUB_OUTPUT"
          echo "$ENTRY" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
